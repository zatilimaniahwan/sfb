{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,wpC;;;;;;;;;;;ACAA,4BAA4B,qBAAqB,EAAE,+CAA+C,+S;;;;;;;;;;;;;;;;;;;;ACAhD;AACc;AAEf;AACT;AAOxC;IAOE,mBACU,OAAqB,EACrB,SAAyB,EACzB,IAAe,EACf,OAAe;QAHf,YAAO,GAAP,OAAO,CAAc;QACrB,cAAS,GAAT,SAAS,CAAgB;QACzB,SAAI,GAAJ,IAAI,CAAW;QACf,YAAO,GAAP,OAAO,CAAQ;QATzB,UAAK,GAAK;YACR,UAAU,EAAC,EAAE;YACb,QAAQ,EAAC,EAAE;SACZ;IASD,CAAC;IACD,4BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IACK,0BAAM,GAAZ;;;;;;;6BACK,KAAI,CAAC,KAAK,CAAC,UAAU,IAAE,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAE,EAAE,GAApD,wBAAoD;wBACvC,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACxC,OAAO,EAAE,yCAAyC;gCAClD,QAAQ,EAAE,IAAI;6BACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;wBAGZ,GAAG,GAAC,4CAA4C,CAAC;wBACrD,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,KAAK,EAAC,EAAC,OAAO,EAAC,EAAC,cAAc,EAAC,mCAAmC,EAAC,EAAC,CAAC,CAAC;wBACxG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;4BACtB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;4BAClD,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;4BAC9C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;4BAChD,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;wBACnC,CAAC,CAAC;;;;;;KAGL;IAED,4BAAQ,GAAR;IACA,CAAC;IAxCU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EASkB,4DAAa;YACX,8DAAe;YACpB,+DAAU;YACP,sDAAO;OAXd,SAAS,CA0CrB;IAAD,gBAAC;CAAA;AA1CqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-button (click)=\\\"previous()\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\n        </ion-buttons>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card color=\\\"warning\\\">\\n    <ion-card-content>\\n      <ion-label id=\\\"warning\\\">Please enter your staff code and password to login. Please contact admin if you forgot the password</ion-label>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-item>\\n      <ion-icon name=\\\"contact\\\" slot=\\\"start\\\" position=\\\"floating\\\"></ion-icon>\\n      <ion-input type=\\\"text\\\"[(ngModel)]=\\\"login.staff_code\\\" placeholder=\\\"Enter your Staff Code\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-icon name=\\\"lock\\\" slot=\\\"start\\\" position=\\\"floating\\\"></ion-icon>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"login.password\\\" placeholder=\\\"Enter your password\\\"></ion-input>\\n      </ion-item>\\n      <br>\\n      <ion-button expand=\\\"block\\\" (click)=\\\"submit()\\\"><ion-icon name=\\\"log-in\\\" slot=\\\"end\\\"></ion-icon>Login</ion-button>\\n\\n\\n</ion-content>\\n\"","module.exports = \"#warning {\\n  font-size: 0.8em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy96YXRpbGltYW5pL3NmYi9zcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjd2FybmluZ3tcbiAgICBmb250LXNpemU6MC44ZW07XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { HttpClient} from '@angular/common/http';\nimport { Storage} from '@ionic/storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  data:Observable<any>;\n  login:any={\n    staff_code:'',\n    password:''\n  }\n  toaster:any;\n  constructor(\n    private navCtrl:NavController,\n    private toastCtrl:ToastController,\n    private http:HttpClient,\n    private storage:Storage\n    ) { \n    \n  }\n  previous(){\n    this.navCtrl.navigateForward('role');\n  }\n  async submit(){\n    if(this.login.staff_code=='' && this.login.password==''){\n      const toast = await this.toastCtrl.create({\n        message: 'Staff code or password cannot be empty.',\n        duration: 2000\n      });\n      toast.present();\n    }\n    else{\n      var url=\"http://localhost/smartfoodbank/staff/login\";\n      this.data=this.http.post(url,this.login,{headers:{'Content-Type':'application/x-www-form-urlencoded'}});\n      this.data.subscribe(data=>{\n        this.storage.set('staff_code',data[0].staff_code);\n        this.storage.set('fullname',data[0].fullname);\n        this.storage.set('usergroup',data[0].usergroup);\n        this.navCtrl.navigateForward('');\n      })\n      \n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}